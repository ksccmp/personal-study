
public class Programmers_거스름돈 {
	public static void main(String[] args) {
		System.out.println(solution(5, new int[]{1,2,5}));
	}
	
	public static int solution(int n, int[] money) {
        int res[] = new int[n+1];
        res[0] = 1;
        
        for(int j=0; j<money.length; j++) { // j => j번째 화폐
            for(int i=0; i<=n; i++) { // i => 만들려는 금액
                if(i >= money[j]) { // 만들려는 금액이 j번째 화폐보다 커야 j번째 화폐를 이용하여 금액을 만들 수 있음
                    res[i] = res[i] + res[i-money[j]];
                }
            }
        }
        
        return res[n];
    }
}

/*
화폐를 하나씩 돌아가면서 0원부터 n원까지 만드는 경우의 수를 계속 더해주는 방법.
예시에서 첫 번째 화폐인 1원으로 0원부터 5원까지 만들고
두 번째 화폐인 2원으로 0원부터 5원까지 만들고
마지막 화폐인 5원으로 0원부터 5원까지 만든다.
1원으로 만들어지는 경우는 : 0=>x / 1=>{1} / 2=>{1,1} / 3=>{1,1,1} / 4=>{1,1,1,1} / 5=>{1,1,1,1,1}
누적하여 2원으로 만들어지는 경우는 : 0=>x / 1=>{1} / 2=>{1,1}, {2} / 3=>{1,1,1}, {1,2} / 4=>{1,1,1,1}, {1,1,2}, {2,2} / 5=>{1,1,1,1,1}, {1,1,1,2}, {1,2,2}
누적하여 5원으로 만들어지는 경우는 : 0=>x / 1=>{1} / 2=>{1,1}, {2} / 3=>{1,1,1}, {1,2} / 4=>{1,1,1,1}, {1,1,2}, {2,2} / 5=>{1,1,1,1,1}, {1,1,1,2}, {1,2,2}, {5}
*/